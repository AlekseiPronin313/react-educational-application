{"version":3,"file":"static/js/412.eace72a3.chunk.js","mappings":"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","sources":["webpack://react-educational-application/./src/component/Users/Users.module.scss?aceb","webpack://react-educational-application/./src/component/common/Paginator/Paginator.module.scss?62e5","component/common/Paginator/Paginator.tsx","component/Users/User.tsx","component/Users/UsersSeachForm.tsx","component/Users/Users.tsx","redux/users-selectors.ts","component/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__wur6m\",\"img\":\"Users_img__QhM-n\",\"users_box\":\"Users_users_box__PiZDa\",\"box\":\"Users_box__0VQPw\",\"button_box\":\"Users_button_box__jODmI\",\"button\":\"Users_button__8ASMP\",\"box_info\":\"Users_box_info__9m+zE\",\"name\":\"Users_name__2XS57\",\"status\":\"Users_status__tohH4\",\"link\":\"Users_link__iLdzZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"amount\":\"Paginator_amount__Lth-r\",\"selectedPage\":\"Paginator_selectedPage__d0I6m\",\"active_selectedPage\":\"Paginator_active_selectedPage__JtPha\",\"button\":\"Paginator_button__zRdj0\"};","import React from \"react\";\r\nimport Style from './Paginator.module.scss'\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 10}) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    const pages: Array<number> = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = React.useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n            <div className={Style.amount}>\r\n                { portionNumber > 1 &&\r\n                <button className={Style.button} onClick={() => {setPortionNumber(portionNumber -1)}}>\r\n                    {\"<\"}\r\n                </button>}\r\n                {\r\n                    pages\r\n                        .filter(page => page >= leftPortionPageNumber && page<rightPortionPageNumber)\r\n                        .map((amount, id) => {\r\n                        return (\r\n                            <span key={id}\r\n                                  className={currentPage === amount ? Style.active_selectedPage : Style.selectedPage}\r\n                                  onClick={() => {\r\n                                      onPageChanged(amount)\r\n                                  }}>{amount}</span>\r\n                        )\r\n                    })\r\n                }\r\n                { portionCount > portionNumber &&\r\n                    <button className={Style.button} onClick={() => {setPortionNumber(portionNumber + 1)}}>\r\n                        {'>'}\r\n                    </button>}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Paginator\r\n","import React from \"react\";\r\nimport Style from './Users.module.scss'\r\nimport img_avatar from './../../assets/image/img_avatar.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={Style.users_box}>\r\n            <NavLink className={Style.link} to={'/profile/' + user.id}>\r\n                <img className={Style.img}\r\n                     src={user.photos.small != null ? user.photos.small : img_avatar} alt={'Avatar'}/>\r\n            </NavLink>\r\n            <div className={Style.box}>\r\n                <div className={Style.box_info}>\r\n                    <p className={Style.name}>{user.name}</p>\r\n                    <p className={Style.status}>{user.status}</p>\r\n                </div>\r\n                <div className={Style.button_box}>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      className={Style.button}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      className={Style.button}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\n\r\nconst userSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const submit = (values: FilterType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\r\n        props.onFilterChanged(values)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            initialValues={{term: '', friend: null}}\r\n            validate={userSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\"/>\r\n                    <Field name='friend' as='select'>\r\n                        <option value='null'>All</option>\r\n                        <option value='true'>Only followed</option>\r\n                        <option value='false'>Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})\r\n","import React from \"react\";\r\nimport Style from './Users.module.scss'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {UsersSearchForm} from \"./UsersSeachForm\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    onFilterChanged: (filter: FilterType) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n                                        currentPage, onPageChanged, totalItemsCount,\r\n                                        pageSize, users, ...props\r\n                                    }) => {\r\n    return (\r\n        <div className={Style.users}>\r\n            <UsersSearchForm onFilterChanged={props.onFilterChanged}/>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalItemsCount}\r\n                       pageSize={pageSize}\r\n            />\r\n            {\r\n                users.map((user) => {\r\n                    return <User user={user}\r\n                                 key={user.id}\r\n                                 followingInProgress={props.followingInProgress}\r\n                                 unfollow={props.unfollow}\r\n                                 follow={props.follow}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalItemsCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    filter: FilterType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, filter} = this.props\r\n        this.props.requestUsers(currentPage, pageSize, filter)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize, filter} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize, filter)\r\n    }\r\n\r\n    onFilterChanged = (filter: FilterType) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(1, pageSize, filter)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalItemsCount={this.props.totalItemsCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   onFilterChanged={this.onFilterChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        filter: getUsersFilter(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {follow,\r\n        unfollow, requestUsers})\r\n) (UsersContainer)\r\n"],"names":["currentPage","onPageChanged","totalItemsCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","React","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","Style","onClick","filter","page","map","amount","id","user","followingInProgress","unfollow","follow","to","src","photos","small","img_avatar","alt","name","status","followed","disabled","some","userSearchFormValidate","values","UsersSearchForm","props","initialValues","term","friend","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","type","as","value","users","getUsers","createSelector","state","usersPage","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","UsersContainer","pageNumber","requestUsers","this","Preloader","compose","connect"],"sourceRoot":""}