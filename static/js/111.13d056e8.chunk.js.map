{"version":3,"file":"static/js/111.13d056e8.chunk.js","mappings":"wNACA,G,QAA0B,0BAA1B,EAAmE,+BAAnE,EAA6G,0BAA7G,EAAqJ,6BAArJ,EAA0L,uBAA1L,EAA0N,wBAA1N,EAAwP,qBCAxP,EAAyB,2BAAzB,EAA6D,2B,mBCiB7D,EATwC,SAAH,GAAoB,IAAfA,EAAI,EAAJA,KAAMC,EAAE,EAAFA,GAC5C,OACI,SAAC,KAAO,CAACC,UAAW,SAACC,GAAO,OAAKA,EAAQC,SAAQ,UAAMC,GAAY,UAAQA,EAAc,EAChFC,GAAE,mBAAcL,GAAK,SACzBD,GAGb,ECfA,EAA+D,yBCc/D,EARqC,SAAH,GAAmB,IAAdO,EAAO,EAAPA,QACnC,OACI,gBAAKL,UAAWG,EAAc,SACzBE,GAGb,E,uCCNMC,GAAYC,EAAAA,EAAAA,GAAiB,KAoBnC,GAFuBC,EAAAA,EAAAA,GAA8B,CAACC,KAAM,kBAArCD,EAdwE,SAACE,GAC5F,OACI,kBAAMV,UAAWG,EAAWQ,SAAUD,EAAME,aAAa,WACrD,SAACC,EAAA,EAAK,CAACb,UAAWG,EACXL,KAAM,UACNgB,UAAWC,EAAAA,EACXC,YAAa,qBACbC,SAAU,CAACC,EAAAA,EAAUZ,MAE5B,mBAAQN,UAAWG,EAAa,sBAG5C,ICqBA,EA5BqC,SAACO,GAElC,IAIML,GAAU,OAAIK,EAAMS,YAAYC,UACjCC,KAAI,SAAAhB,GAAO,OAAI,SAAC,EAAO,CAAkBA,QAASA,EAAQA,SAA7BA,EAAQN,GAA+B,IAEnEuB,GAAU,OAAIZ,EAAMS,YAAYG,SACjCD,KAAI,SAAAE,GAAM,OAAI,SAAC,EAAU,CAAiBzB,KAAMyB,EAAOzB,KAAMC,GAAIwB,EAAOxB,IAAzCwB,EAAOxB,GAAuC,IAElF,OACI,iBAAKC,UAAWG,EAAc,WAC1B,gBAAKH,UAAWG,EAAoB,SAC/BmB,KAEL,iBAAKtB,UAAWG,EAAe,WAC3B,gBAAKH,UAAWG,EAAkB,SAC7BE,KAEL,SAAC,EAAc,CAACM,SAnBN,SAACa,GACnBd,EAAMe,YAAYD,EAAOF,QAC7B,SAsBJ,E,wCC7BA,GAAeI,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACC,GACnB,MAAO,CACHT,YAAaS,EAAMT,YAE3B,IAG4B,UAAKU,EAAAA,IAAWC,EAAAA,EAD5C,CAC8DC,E","sources":["webpack://react-educational-application/./src/component/Dialogs/Dialogs.module.scss?5042","webpack://react-educational-application/./src/component/Dialogs/DialogItem/DialogItem.module.scss?7858","component/Dialogs/DialogItem/DialogItem.tsx","webpack://react-educational-application/./src/component/Dialogs/Message/Message.module.scss?f792","component/Dialogs/Message/Message.tsx","component/Dialogs/DialogsForm.tsx","component/Dialogs/Dialogs.tsx","component/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__PEO-L\",\"dialogs_items\":\"Dialogs_dialogs_items__qnLGU\",\"messages\":\"Dialogs_messages__BbCsc\",\"box_message\":\"Dialogs_box_message__iaK2u\",\"input\":\"Dialogs_input__z2fQh\",\"button\":\"Dialogs_button__hIVxQ\",\"box\":\"Dialogs_box__AEu8o\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__ApS45\",\"active\":\"DialogItem_active__GujTY\"};","import React from \"react\";\r\nimport Style from './DialogItem.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = ({name, id}) => {\r\n    return (\r\n        <NavLink className={(navData) => navData.isActive ? `${Style.active}` : `${Style.dialog}`}\r\n                 to={`/dialogs/${id}`}>\r\n            {name}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__BJaTo\",\"message\":\"Message_message__dH8tR\"};","import React from \"react\";\r\nimport Style from './Message.module.scss'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = ({message}) => {\r\n    return (\r\n        <div className={Style.message}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport Style from './Dialogs.module.scss'\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {NewMessageFormType} from \"./Dialogs\";\r\n\r\nconst maxLength = maxLengthCreator(2000)\r\n\r\ntype PropsType = {}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form className={Style.box} onSubmit={props.handleSubmit}>\r\n            <Field className={Style.input}\r\n                   name={'dialogs'}\r\n                   component={Input}\r\n                   placeholder={\"Enter your message\"}\r\n                   validate={[required, maxLength]}\r\n            />\r\n            <button className={Style.button} >Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<NewMessageFormType>({form: 'newMessageBody'}) (AddMessageForm)\r\n\r\nexport default LoginReduxForm\r\n","import React from \"react\";\r\nimport Style from './Dialogs.module.scss'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport LoginReduxForm from \"./DialogsForm\";\r\nimport {InitialStateType} from \"../../redux/dialogs-reducer\";\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nexport type NewMessageFormType = {\r\n    dialogs: string\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    const addNewMessage = (values: NewMessageFormType) => {\r\n        props.sendMessage(values.dialogs)\r\n    }\r\n\r\n    const message = [...props.dialogsPage.messages]\r\n        .map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n    const dialogs = [...props.dialogsPage.dialogs]\r\n        .map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n\r\n    return (\r\n        <div className={Style.dialogs}>\r\n            <div className={Style.dialogs_items}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={Style.messages}>\r\n                <div className={Style.box_message}>\r\n                    {message}\r\n                </div>\r\n                <LoginReduxForm onSubmit={addNewMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {actions} from \"../../redux/dialogs-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions}), withAuthRedirect)(Dialogs)\r\n\r\n\r\n\r\n"],"names":["name","id","className","navData","isActive","Style","to","message","maxLength","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","required","dialogsPage","messages","map","dialogs","dialog","values","sendMessage","compose","connect","state","actions","withAuthRedirect","Dialogs"],"sourceRoot":""}