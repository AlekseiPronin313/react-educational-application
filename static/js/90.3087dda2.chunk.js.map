{"version":3,"file":"static/js/90.3087dda2.chunk.js","mappings":"2MACA,EAA0B,yBAA1B,EAAmE,+BAAnE,EAA6G,0BAA7G,EAAqJ,6BAArJ,EAA0L,uBAA1L,EAA0N,wBAA1N,EAAwP,qBCAxP,EAAyB,2BAAzB,EAA6D,2B,mBCgB7D,EAbmB,SAACA,GAChB,OACIA,EAAMA,MAAMC,KAAI,SAACC,EAAQC,GACrB,OACI,SAAC,KAAO,CAAUC,UAAW,SAACC,GAAO,OAAKA,EAAQC,SAAQ,UAAMC,GAAY,UAAQA,EAAc,EACzFC,GAAE,mBAAcN,EAAOC,IAAK,SAChCD,EAAOO,MAFEN,EAKtB,GAER,ECdA,EAA+D,yBCe/D,EAbgB,SAACH,GACb,OACIA,EAAMA,MAAMC,KAAI,SAACS,EAASP,GACxB,OACI,gBAAcC,UAAWG,EAAc,SAClCG,EAAQA,SADHP,EAIhB,GAER,E,uCCPMQ,GAAYC,EAAAA,EAAAA,GAAiB,KAkBnC,GAFuBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAdA,SAACb,GACpB,OACI,kBAAMI,UAAWG,EAAWQ,SAAUf,EAAMgB,aAAa,WACrD,SAACC,EAAA,EAAK,CAACb,UAAWG,EACXE,KAAM,UACNS,UAAWC,EAAAA,EACXC,YAAa,qBACbC,SAAU,CAACC,EAAAA,EAAUX,MAE5B,mBAAQP,UAAWG,EAAa,sBAG5C,ICOA,EArBgB,SAACP,GAKb,OACI,iBAAKI,UAAWG,EAAc,WAC1B,gBAAKH,UAAWG,EAAoB,UAChC,SAAC,EAAU,CAACP,MAAOA,EAAMuB,YAAYC,aAEzC,iBAAKpB,UAAWG,EAAe,WAC3B,gBAAKH,UAAWG,EAAkB,UAC9B,SAAC,EAAO,CAACP,MAAOA,EAAMuB,YAAYE,cAElC,SAAC,EAAc,CAACV,SAbV,SAACW,GACnB1B,EAAM2B,YAAYD,EAAOF,QAC7B,SAgBJ,E,8BCLA,GAAeI,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACC,GACnB,MAAO,CACHP,YAAaO,EAAMP,YAE3B,IAEyB,SAACQ,GACtB,MAAO,CACHJ,YAAa,SAACK,GACVD,GAASE,EAAAA,EAAAA,GAAmBD,GAChC,EAER,IAIIE,EAAAA,EAFJ,CAGEC,E","sources":["webpack://react-educational-application/./src/component/Dialogs/Dialogs.module.scss?5042","webpack://react-educational-application/./src/component/Dialogs/DialogItem/DialogItem.module.scss?7858","component/Dialogs/DialogItem/DialogItem.js","webpack://react-educational-application/./src/component/Dialogs/Message/Message.module.scss?f792","component/Dialogs/Message/Message.js","component/Dialogs/DialogsForm.js","component/Dialogs/Dialogs.js","component/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__PEO-L\",\"dialogs_items\":\"Dialogs_dialogs_items__qnLGU\",\"messages\":\"Dialogs_messages__BbCsc\",\"box_message\":\"Dialogs_box_message__iaK2u\",\"input\":\"Dialogs_input__z2fQh\",\"button\":\"Dialogs_button__hIVxQ\",\"box\":\"Dialogs_box__AEu8o\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__ApS45\",\"active\":\"DialogItem_active__GujTY\"};","import React from \"react\";\r\nimport Style from './DialogItem.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        props.props.map((dialog, id) => {\r\n            return (\r\n                <NavLink key={id} className={(navData) => navData.isActive ? `${Style.active}` : `${Style.dialog}`}\r\n                         to={`/dialogs/${dialog.id}`}>\r\n                    {dialog.name}\r\n                </NavLink>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__BJaTo\",\"message\":\"Message_message__dH8tR\"};","import React from \"react\";\r\nimport Style from './Message.module.scss'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        props.props.map((message, id) => {\r\n          return(\r\n              <div key={id} className={Style.message}>\r\n                  {message.message}\r\n              </div>\r\n          )\r\n        })\r\n    )\r\n}\r\n\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport Style from './Dialogs.module.scss'\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst maxLength = maxLengthCreator(2000)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form className={Style.box} onSubmit={props.handleSubmit}>\r\n            <Field className={Style.input}\r\n                   name={'dialogs'}\r\n                   component={Input}\r\n                   placeholder={\"Enter your message\"}\r\n                   validate={[required, maxLength]}\r\n            />\r\n            <button className={Style.button} >Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'newMessageBody'}) (AddMessageForm)\r\n\r\nexport default LoginReduxForm\r\n","import React from \"react\";\r\nimport Style from './Dialogs.module.scss'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport LoginReduxForm from \"./DialogsForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.dialogs)\r\n    }\r\n\r\n    return (\r\n        <div className={Style.dialogs}>\r\n            <div className={Style.dialogs_items}>\r\n                <DialogItem props={props.dialogsPage.dialogs}/>\r\n            </div>\r\n            <div className={Style.messages}>\r\n                <div className={Style.box_message}>\r\n                    <Message props={props.dialogsPage.messages}/>\r\n                </div>\r\n                    <LoginReduxForm onSubmit={addNewMessage}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer.ts\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n"],"names":["props","map","dialog","id","className","navData","isActive","Style","to","name","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","required","dialogsPage","dialogs","messages","values","sendMessage","compose","connect","state","dispatch","newMessageBody","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}